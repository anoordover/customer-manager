buildscript {
  ext {
    h2Dependency = 'com.h2database:h2:1.4.196'
  }

  dependencies {
    classpath h2Dependency
  }
}

plugins {
  id "scala"
  id "application"
  id "com.diffplug.gradle.spotless" version "3.6.0"
  id "org.flywaydb.flyway" version "4.2.0"
  id "nu.studer.jooq" version "2.0.9"
  id "com.github.maiflai.scalatest" version "0.18"
}

group 'sk.bsmk'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
mainClassName = 'sk.bsmk.manager.customer.CustomerApp'

repositories {
  mavenCentral()
  jcenter()
}

ext {
  scalaVersion = '2.12'
  akkaVersion = '2.5.6'
  akkaHttpVersion = '10.0.10'
  dbUrl = 'jdbc:h2:file:./build/customer'
  dbUser = 'sa'
}

dependencies {

  jooqRuntime h2Dependency

  // basic
  compile("org.scala-lang:scala-library:$scalaVersion.4")
//  compile("org.typelevel:cats-core_$scalaVersion:1.0.0-RC1")
  compile("com.typesafe.akka:akka-actor_$scalaVersion:$akkaVersion")

  // serialization
  compile("com.twitter:chill-akka_$scalaVersion:0.9.2")

  // cluster and sharding for protobuf dependency
  compile("com.typesafe.akka:akka-cluster_$scalaVersion:$akkaVersion")
  compile("com.typesafe.akka:akka-cluster-sharding_$scalaVersion:$akkaVersion")

  // logging
  compile("com.typesafe.scala-logging:scala-logging_$scalaVersion:3.7.2")
  compile("com.typesafe.akka:akka-slf4j_$scalaVersion:$akkaVersion")
  compile("ch.qos.logback:logback-classic:1.2.3")
  compile("org.fusesource.jansi:jansi:1.16")  // for windows

  // persistence
  compile("com.typesafe.akka:akka-persistence_$scalaVersion:$akkaVersion")
  compile("com.typesafe.akka:akka-persistence-query_$scalaVersion:$akkaVersion")
  compile("com.github.dnvriend:akka-persistence-jdbc_$scalaVersion:3.0.1")
  compile(h2Dependency)
  compile("org.jooq:jooq")

  // testing
  testCompile("org.scalatest:scalatest_$scalaVersion:3.0.4")
  // for gradle scalatest plugin
  testRuntime 'org.pegdown:pegdown:1.6.0'

}

clean {
  delete "$projectDir/out"
  delete "$projectDir/src/main/java/sk/bsmk/customer/persistence/model/"
}

spotless {
  scala {
    scalafmt('1.3.0').configFile('.scalafmt.conf')
  }
}

tasks.withType(ScalaCompile) {
  dependsOn { spotlessApply }
//  configure(scalaCompileOptions.forkOptions) {
//    memoryMaximumSize = '1g'
//    jvmArgs = ['-XX:MaxPermSize=512m', '-Ypartial-unification']
//  }
}

flyway {
  url = dbUrl
  user = dbUser
}

jooq {
  version = '3.10.1'
  edition = 'OSS'
  customer(sourceSets.main) {
    jdbc {
      url = dbUrl
      user = dbUser
    }
    generator {
      database {
        inputSchema = 'PUBLIC'
        excludes = 'JOURNAL|SNAPSHOT|SCHEMA_VERSION'
      }
      generate {
        relations = false
        deprecated = false
        records = true
        immutablePojos = false
        fluentSetters = false
        javaTimeTypes = true
      }
      target {
        directory = 'src/main/java'
        packageName = 'sk.bsmk.customer.persistence.model'
      }
    }
  }
}

cleanGenerateCustomerJooqSchemaSource.enabled = false

generateCustomerJooqSchemaSource.dependsOn flywayMigrate
generateCustomerJooqSchemaSource.outputs.upToDateWhen { false }

task wrapper(type: Wrapper) {
  gradleVersion = '4.3.1'
}
